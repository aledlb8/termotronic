---
export interface Props {
  chatUrl?: string;
  ariaLabel?: string;
}

const {
  chatUrl = "https://wa.me/584142821856",
  ariaLabel = "Abrir chat en vivo",
} = Astro.props;
---

<div class="chat-bubble-container" id="chatBubble">
  <a
    href={chatUrl}
    target="_blank"
    rel="noopener noreferrer"
    class="chat-bubble"
    aria-label={ariaLabel}>
    <svg
      class="chat-icon"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg">
      <path
        d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.465 3.488"
        fill="currentColor"></path>
    </svg>
  </a>
</div>

<script>
  let audioContext: AudioContext | null = null;
  let userHasInteracted = false;

  function initAudioContext() {
    if (!audioContext) {
      try {
        const AudioContextClass =
          window.AudioContext || (window as any).webkitAudioContext;
        audioContext = new AudioContextClass();
        if (audioContext.state === "suspended") {
          audioContext.resume();
        }
      } catch (error) {
        console.log("AudioContext no disponible");
      }
    }
  }

  // FunciÃ³n para crear el sonido de popup mejorada
  function playPopSound() {
    if (!audioContext || !userHasInteracted) {
      return;
    }

    try {
      const oscillator = audioContext.createOscillator();
      const gainNode = audioContext.createGain();

      oscillator.connect(gainNode);
      gainNode.connect(audioContext.destination);

      oscillator.frequency.setValueAtTime(600, audioContext.currentTime);
      oscillator.frequency.exponentialRampToValueAtTime(
        900,
        audioContext.currentTime + 0.15,
      );
      oscillator.type = "sine";

      gainNode.gain.setValueAtTime(0, audioContext.currentTime);
      gainNode.gain.linearRampToValueAtTime(
        0.15,
        audioContext.currentTime + 0.02,
      );
      gainNode.gain.exponentialRampToValueAtTime(
        0.001,
        audioContext.currentTime + 0.3,
      );

      oscillator.start(audioContext.currentTime);
      oscillator.stop(audioContext.currentTime + 0.3);
    } catch (error) {
      console.log("Error al reproducir sonido:", error);
    }
  }

  function playAlternativeSound() {
    if (!userHasInteracted) {
      return;
    }

    try {
      const audio = new Audio(
        "data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBSuBzvLZiTYIG2m98OScTgwOUarm7blmGgU7k9n1unEiBC13yO/eizEIHWq+8+OWT",
      );
      audio.volume = 0.1;
      audio.play().catch(() => {});
    } catch (error) {
      console.log("Audio alternativo no disponible");
    }
  }

  function showChatBubble() {
    const chatBubble = document.getElementById("chatBubble");
    if (chatBubble) {
      chatBubble.classList.add("show");

      setTimeout(() => {
        if (userHasInteracted && audioContext) {
          playPopSound();
        } else {
          playAlternativeSound();
        }
      }, 200);
    }
  }

  function handleFirstInteraction() {
    if (!userHasInteracted) {
      userHasInteracted = true;
      initAudioContext();

      document.removeEventListener("click", handleFirstInteraction);
      document.removeEventListener("keydown", handleFirstInteraction);
      document.removeEventListener("touchstart", handleFirstInteraction);
    }
  }

  document.addEventListener("click", handleFirstInteraction);
  document.addEventListener("keydown", handleFirstInteraction);
  document.addEventListener("touchstart", handleFirstInteraction);

  function markBubbleAsShown() {
    sessionStorage.setItem("chatBubbleShown", "true");
  }

  setTimeout(() => {
    showChatBubble();
    markBubbleAsShown();
  }, 5000);
</script>

<style>
  .chat-bubble-container {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
    opacity: 0;
    transform: translateY(20px) scale(0.8);
    transition: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
  }

  .chat-bubble-container.show {
    opacity: 1;
    transform: translateY(0) scale(1);
  }

  .chat-bubble {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 70px;
    height: 70px;
    background: linear-gradient(
      135deg,
      rgba(34, 197, 94, 0.9) 0%,
      rgba(21, 128, 61, 0.9) 100%
    );
    border-radius: 50%;
    box-shadow: 0 4px 20px rgba(34, 197, 94, 0.3);
    color: white;
    text-decoration: none;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .chat-bubble:hover {
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 8px 25px rgba(34, 197, 94, 0.5);
    background: linear-gradient(
      135deg,
      rgba(34, 197, 94, 1) 0%,
      rgba(21, 128, 61, 1) 100%
    );
  }

  .chat-bubble:active {
    transform: translateY(0) scale(0.95);
  }

  .chat-icon {
    width: 32px;
    height: 32px;
    transition: transform 0.3s ease;
  }

  .chat-bubble:hover .chat-icon {
    transform: scale(1.1);
  }

  /* Mobile responsiveness */
  @media (max-width: 768px) {
    .chat-bubble-container {
      bottom: 16px;
      right: 16px;
    }

    .chat-bubble {
      width: 56px;
      height: 56px;
    }

    .chat-icon {
      width: 24px;
      height: 24px;
    }
  }

  /* Extra small screens */
  @media (max-width: 480px) {
    .chat-bubble-container {
      bottom: 12px;
      right: 12px;
    }

    .chat-bubble {
      width: 52px;
      height: 52px;
    }

    .chat-icon {
      width: 22px;
      height: 22px;
    }
  }

  /* Accessibility improvements */
  @media (prefers-reduced-motion: reduce) {
    .chat-bubble {
      transition: none;
    }

    .chat-bubble:hover {
      transform: none;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .chat-bubble {
      background: #000;
      border: 2px solid #fff;
    }
  }
</style>
