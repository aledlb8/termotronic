// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  email         String     @unique
  password      String
  name          String
  role          UserRole   @default(RETAILER)
  retailWarranties Warranty[] @relation("RetailerWarranties") // warranties they manage as retailer
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Product {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String?
  models        ProductModel[]
  warranties    Warranty[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model ProductModel {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  productId     String     @db.ObjectId
  product       Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
  warranties    Warranty[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@index([productId])
}

model Warranty {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  code          String     @unique
  productName   String
  productModel  String
  purchaseDate  DateTime
  expiryDate    DateTime
  isUsed        Boolean    @default(false)
  usedAt        DateTime?
  retailerId    String     @db.ObjectId
  retailer      User       @relation("RetailerWarranties", fields: [retailerId], references: [id])
  productId     String?    @db.ObjectId
  product       Product?   @relation(fields: [productId], references: [id])
  modelId       String?    @db.ObjectId
  model         ProductModel? @relation(fields: [modelId], references: [id])
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

enum UserRole {
  ADMIN
  RETAILER
} 